version: "2.1"

services:
  traefik:
    container_name: od-traefik
    image: traefik:v2.3
    ports:
      - "80:80"
      - "443:443"
      - "5300:5300"
    volumes:
      - ./letsencrypt:/letsencrypt
      - ./traefik_config.yml:/traefik_config.yml
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      # - --api.debug=true
      # - --log.level=DEBUG
      
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/traefik_config.yml
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.web-proxy.address=:5300
      - --entrypoints.web-shlink.address=:443
      - --certificatesresolvers.mytlschallenge.acme.tlschallenge=true
      - --certificatesresolvers.mytlschallenge.acme.email=oliver.franke@limebit.de
      - --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json

  database:
    container_name: od-database
    image: docker.pkg.github.com/open-discourse/open-discourse/database:development
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres

  persistent_database:
    container_name: od-persistent-database
    image: postgres:12
    ports:
      - "2345:5432"
    volumes:
      - ./persistent_database.sql:/persistent_database.sql
      - ./persistent_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres

  proxy:
    container_name: od-proxy
    image: docker.pkg.github.com/open-discourse/open-discourse/proxy:latest
    depends_on:
      database:
        condition: service_healthy
      persistent_database:
        condition: service_healthy
    environment:
      - CACHE_EXPIRATION=100000
      - QUERY_LIMIT=200
      - ACCESS_KEY=${ACCESS_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ENDPOINT=${ENDPOINT}
      - POSTGRES_DB_HOST=database
      - POSTGRES_PERSISTENT_DB_HOST=persistent_database
      - POSTGRES_PERSISTENT_DB_PORT=5432
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.proxy.rule=Host(`api.opendiscourse.de`)"
      - "traefik.http.routers.proxy.entrypoints=web-proxy"
      - "traefik.http.routers.proxy.tls.certresolver=mytlschallenge"

  shlink:
    container_name: od-shlink
    image: shlinkio/shlink:stable
    depends_on:
      persistent_database:
        condition: service_healthy
    environment:
      - SHORT_DOMAIN_HOST=api.opendiscourse.de
      - SHORT_DOMAIN_SCHEMA=https
      - GEOLITE_LICENSE_KEY=${GEOLITE}
      - DB_DRIVER=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=persistent_database
      - DISABLE_TRACKING=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.shlink.rule=Host(`api.opendiscourse.de`)"
      - "traefik.http.routers.shlink.entrypoints=web-shlink"
      - "traefik.http.routers.shlink.tls.certresolver=mytlschallenge"
